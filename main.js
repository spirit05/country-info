document.addEventListener('DOMContentLoaded', () => {
  const URL = 'https://restcountries.com/v3.1';
  const form = document.querySelector('.country__input');
  const input = document.querySelector('.header__input');
  const container = document.querySelector('main');
  const helpContainer = document.querySelector('.help__list');
  const elementHelpList = document.getElementsByClassName('help__item');
  const fragment = document.createDocumentFragment();
  const messageErrors = new Map([
    [
      'User denied Geolocation',
      '–î–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–º—É –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é –∑–∞–ø—Ä–µ—â–µ–Ω, —Ä–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–º—É –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ñ–æ—Ä–º–æ–π –ø–æ–∏—Å–∫–∞ –¥–ª—è!',
    ],
    [
      'Failed to fetch',
      '–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ, –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º—É –ø–æ–∏—Å–∫–∞!',
    ],
    ['No neighbour', '–≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∞ –Ω–µ –≥—Ä–∞–Ω–∏—á–∏—Ç —Å –¥—Ä—É–≥–∏–º–∏!'],
    [403, '–î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!'],
    [404, '–°—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö!'],
    [500, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!'],
  ]);
  let allCountries, countriesName;

  const showHtml = (data, neighbour = false) => {
    const population = new Intl.NumberFormat(data.altSpellings[0]).format(
      data.population
    );
    const languages = Object.values(data.languages).join(', ');
    const [currencies] = Object.values(data.currencies);

    container.insertAdjacentHTML(
      'beforeend',
      `
      <article class="country ${neighbour ? 'neighbour' : ''}">
          <img class="country__img" src="${data.flags.svg}">
          <div class="country__data">
              <h3 class="country__name">${data.name.common}</h3>
              <h4 class="country__region">${data.region}</h4>
              <p class="country__row"><span>üë®‚Äçüë©‚Äçüëß‚Äçüë¶</span>${population}</p>
              <p class="country__row"><span>üó£Ô∏è</span>${languages}</p>
              <p class="country__row"><span>üí∞</span>${currencies.name} ${currencies.symbol}</p>
              <a href="${data.maps.googleMaps}" style="display: block; text-decoration: none;" target="_blank">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ</a>
          </div>
      </article>
`
    );

    return data;
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const getUserGeo = () =>
    new Promise((res, rej) =>
      navigator.geolocation.getCurrentPosition(res, rej)
    );

  //   –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
  const checkResponse = res => {
    if (!res.ok) throw new Error(res.status);
    return res.json();
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∑–∏—Ü–∏–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç—Ä–∞–Ω–µ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
  const positionHandler = pos => {
    const { latitude: lat, longitude: lng } = pos.coords;
    return fetch(
      `https://geocode.xyz/${lat},${lng}?json=1`
    );
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –≤ —Å–ø–∏—Å–∫–µ —Å—Ç—Ä–∞–Ω
  const findComparator = (el, name) =>
    el.name.official.toLowerCase() === name.toLowerCase() ||
    el.name.common.toLowerCase() === name.toLowerCase() ||
    el.translations.rus.official.toLowerCase() === name.toLowerCase() ||
    el.translations.rus.common.toLowerCase() === name.toLowerCase();

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
  const getUserCountryRequest = countryReq =>
    new Promise(req => {
      const country = allCountries.find(el => findComparator(el, countryReq));
      country ? req(country) : rej('404');
    });
  
  // –ü–µ—Ä–µ–¥–∞—á–∞ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã
  const getCountryName = data => getUserCountryRequest(data.country);

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—Ç—Ä–∞–Ω –≥—Ä–∞–Ω–∏—á–∞—â–∏—Ö —Å –æ—Å–Ω–æ–≤–Ω–æ–π
  const getNeighbours = data =>
    data?.borders &&
    data.borders.map(neighbour =>
      allCountries.filter(el => el.cca3 === neighbour)
    );

  // –í—ã–≤–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ—Å–µ–¥–Ω–∏—Ö —Å—Ç—Ä–∞–Ω
  const displayNeighbours = neighbours =>
    neighbours && neighbours.forEach(el => showHtml(...el, true));
  
  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  const displayErrorInContainer = txt => {
    container.textContent = '';
    container.insertAdjacentHTML(
      'afterbegin',
      `<span style="padding: 10px; font-size: 1.8rem; border: 1px solid red; border-radius: 10px; color: red;">${txt}</span>`
    )
  };
  
  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
  const displayError = (container, message) => {
    container.insertAdjacentHTML(
        'beforeend',
        `<span style="display: block; padding: 1rem; text-align: center;">${message}</span>`
      )
  }

  //   –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∫ –Ω–∏–º
  const errorHandler = err => {
    const article = document.querySelector('article');
    const errorMsg = messageErrors.get(err.message);

    if (article) displayError(article, errorMsg);
    else displayErrorInContainer(errorMsg);

    console.error(errorMsg);
  };

  // –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π —Å—Ç—Ä–∞–Ω—ã –≤ —Ñ–æ—Ä–º–µ –ø–æ–∏—Å–∫–∞
  const createElement = el => {
    const name = el;
    const li = document.createElement('li');
    
    li.textContent = name;
    li.classList.add('help__item');
    li.style.display = 'none';
    
    fragment.appendChild(li);
    
    return el;
  };

  // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Å—Ç—Ä–∞–Ω, 
  // —Å–æ–∑–¥–∞–Ω–∏–µ –µ–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ–¥—Å—Ç–∫–∞–∑–∫–∏ —Ñ–æ—Ä–º—ã –ø–æ–∏—Å–∫–∞,
  // –≤—Å—Ç–∞–≤–∫–∞ —Å—Ä–∞–∑—É –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (–¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏,
  // —á—Ç–æ–±—ã –Ω–µ –¥–æ–±–∞–≤–ª—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤–≤–æ–¥–µ —Å–∏–º–≤–æ–ª–∞, –∞ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —É–∂–µ –≥–æ—Ç–æ–≤—ã–º —Å–ø–∏—Å–∫–æ–º)
  const helper = res => {
    contriesName = allCountries
      .flatMap(e => [e.name.official, e.translations.rus.official])
      .map(createElement);
    helpContainer.append(fragment);
    return res
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω
  const getAllCountries = geoData =>
    fetch(`${URL}/all`)
      .then(res => res.json())
      .then(data => ((allCountries = data), geoData))
      .then(helper)
      .catch(e => console.error(e));

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const submitHandler = e => {
    e.preventDefault();

    const value = input.value.toLowerCase();

    if (!value || /\d/g.test(value)) return;

    container.textContent = '';

    const getUserRequest = getUserCountryRequest(value);

    input.value = '';

    getUserRequest
      .then(showHtml)
      .then(getNeighbours)
      .then(displayNeighbours)
      .catch(errorHandler);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const inputHandler = () => {
    const value = input.value;
    let j = 0,
        className;

    helpContainer.style.display = 'block';

    contriesName.forEach(
      (el, i) => {
        className =
          value && j < 10 && el.match(new RegExp(`${value}`, 'i'))
            ? 'list-item'
            : 'none';
        className === 'list-item' && j++;
        elementHelpList[i].style.display = className;
      }
    );
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
  const selectElem = e =>
    e.target.classList.contains('help__item') &&
    ((input.value = e.target.textContent),
    (helpContainer.style.display = 'none'));

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª—É—à–∞—Ç–µ–ª–µ–π —Å–æ–±—ã—Ç–∏–π
  form.addEventListener('submit', submitHandler);
  input.addEventListener('input', inputHandler);
  helpContainer.addEventListener('click', selectElem);

  // –ü–µ—Ä–µ–¥–∞—á–∞ –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  getUserGeo()
    .then(getAllCountries)
    .then(positionHandler)
    .then(checkResponse)
    .then(getCountryName)
    .then(showHtml)
    .then(getNeighbours)
    .then(displayNeighbours)
    .catch(errorHandler);
});
